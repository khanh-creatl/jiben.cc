local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local LocalPlayer = Players.LocalPlayer
local Camera = game.Workspace.CurrentCamera
local HttpService = game:GetService("HttpService")

-- Biến
local isCamlockEnabled = false
local targetPlayer = nil
local basePredictionFactor = 0.15
local colorChangeSpeed = 0.05
local highlight = nil
local ping = 0
local dragging = false
local dragStart = nil
local startPos = nil
local rainbowIndex = 0

-- Hàm lấy ping
local function getPing()
    local startTime = tick()
    pcall(function()
        HttpService:GetAsync("https://www.roblox.com")
    end)
    return (tick() - startTime) * 1000
end

-- Cập nhật ping
spawn(function()
    while true do
        ping = getPing()
        task.wait(5)
    end
end)

-- Hàm cập nhật highlight
local function updateHighlight()
    if targetPlayer and targetPlayer.Character then
        if highlight then
            highlight:Destroy()
        end
        highlight = Instance.new("Highlight")
        highlight.FillColor = Color3.fromRGB(255, 0, 0)
        highlight.OutlineColor = Color3.fromRGB(255, 0, 0)
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0
        highlight.Adornee = targetPlayer.Character
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        highlight.Parent = targetPlayer.Character
    end
end

-- Tạo GUI
local function createGui()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    screenGui.Name = "CamlockGui"
    screenGui.ResetOnSpawn = false -- Không mất khi chết

    -- Frame chứa GUI (hình vuông đen với viền bảy màu)
    local guiFrame = Instance.new("Frame")
    guiFrame.Size = UDim2.new(0, 120, 0, 120)
    guiFrame.Position = UDim2.new(0.5, -60, 0.9, -60)
    guiFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    guiFrame.BorderSizePixel = 4
    guiFrame.Active = true
    guiFrame.Draggable = true
    guiFrame.Parent = screenGui

    -- Hiệu ứng viền bảy màu chạy liên tục
    spawn(function()
        while true do
            local rainbowColors = {
                Color3.fromRGB(255, 0, 0),      -- Đỏ
                Color3.fromRGB(255, 127, 0),    -- Cam
                Color3.fromRGB(255, 255, 0),    -- Vàng
                Color3.fromRGB(0, 255, 0),      -- Xanh lá
                Color3.fromRGB(0, 0, 255),      -- Xanh dương
                Color3.fromRGB(75, 0, 130),     -- Chàm
                Color3.fromRGB(148, 0, 211)     -- Tím
            }
            local index = math.floor(rainbowIndex % #rainbowColors) + 1
            guiFrame.BorderColor3 = rainbowColors[index]
            rainbowIndex = rainbowIndex + 1
            task.wait(colorChangeSpeed)
        end
    end)

    -- Button với hình ảnh
    local toggleButton = Instance.new("ImageButton")
    toggleButton.Size = UDim2.new(1, -8, 1, -8)
    toggleButton.Position = UDim2.new(0, 4, 0, 4)
    toggleButton.BackgroundTransparency = 1
    toggleButton.Image = "rbxassetid://120379153377523" -- ID ảnh của bạn
    toggleButton.ScaleType = Enum.ScaleType.Fit
    toggleButton.Parent = guiFrame

    -- TextLabel hiển thị trạng thái
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Size = UDim2.new(1, 0, 1, 0)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "OFF"
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    statusLabel.Font = Enum.Font.SourceSansBold
    statusLabel.TextSize = 14
    statusLabel.TextStrokeTransparency = 0
    statusLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    statusLabel.Parent = toggleButton

    -- Xử lý kéo GUI
    guiFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = guiFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    guiFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
            local delta = input.Position - dragStart
            guiFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    -- Bật/tắt camlock
    toggleButton.MouseButton1Click:Connect(function()
        isCamlockEnabled = not isCamlockEnabled

        if isCamlockEnabled then
            local closestPlayer = nil
            local closestDistance = math.huge
            local localPos = LocalPlayer.Character and LocalPlayer.Character.HumanoidRootPart.Position

            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
                    local distance = (player.Character.Head.Position - localPos).Magnitude
                    if distance < closestDistance then
                        closestDistance = distance
                        closestPlayer = player
                    end
                end
            end

            if closestPlayer then
                targetPlayer = closestPlayer
                statusLabel.Text = "DNK\nlockplayer: " .. closestPlayer.Name
                StarterGui:SetCore("SendNotification", {
                    Title = "DNK",
                    Text = "lockplayer: " .. closestPlayer.Name,
                    Duration = 3
                })
                updateHighlight()

                targetPlayer.CharacterAdded:Connect(function(newCharacter)
                    if isCamlockEnabled then
                        task.wait(1)
                        updateHighlight()
                    end
                end)
            end
        else
            statusLabel.Text = "DNK\nlock off"
            StarterGui:SetCore("SendNotification", {
                Title = "DNK",
                Text = "lock off",
                Duration = 3
            })
            if highlight then
                highlight:Destroy()
                highlight = nil
            end
            targetPlayer = nil
        end
    end)
end

-- Hàm khóa camera
local function lockCamera()
    if isCamlockEnabled and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head") then
        local head = targetPlayer.Character.Head
        local humanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        local velocity = humanoidRootPart and humanoidRootPart.Velocity or Vector3.new(0, 0, 0)

        local adjustedPredictionFactor = basePredictionFactor * (ping > 150 and (ping / 1000) or 0.05)
        local predictedPosition = head.Position + velocity * adjustedPredictionFactor

        Camera.CFrame = CFrame.new(Camera.CFrame.Position, predictedPosition)
    end
end

-- Khởi tạo GUI
createGui()

-- Kết nối hàm khóa camera
RunService.Heartbeat:Connect(lockCamera)

-- Thông báo khởi động
StarterGui:SetCore("SendNotification", {
    Title = "Camlock Siêu Dính",
    Text = "Camlock loaded! Locks tightly to head, follows respawn. Click to toggle ON/OFF.",
    Duration = 5
})
